set  _ENDIAN little
set _TAP_TYPE 1234

gdb_target_description disable
set cpu_count 1
set instr_addr 0xF9000000

if { $LEGACY_IDE == 0 } {
    set proj_loc ..//..//..//
    
    adapter speed 800
    adapter srst delay 260
    jtag_ntrst_delay 250
    
    set _CHIPNAME fpga_spinal
    jtag newtap $_CHIPNAME bridge -expected-id $_CPUTAPID -irlen 5 -ircapture 0x5 -irmask 0xF
    if { $STANDARD_DEBUG == 0 } {    
        for {set i 0} {$i < $cpu_count} {incr i} {
            target create $_CHIPNAME.cpu$i vexriscv -endian $_ENDIAN -chain-position $_CHIPNAME.bridge -coreid $i -dbgbase [expr $i*0x1000+0x10B80000] -work-area-phys 0xF9000000 -work-area-size 1024
            vexriscv readWaitCycles 40
            vexriscv cpuConfigFile $proj_loc/cpu$i.yaml
            vexriscv jtagMapping 8 8 0 1 2 2  
        }
    } else { # standard debug interface 
	if { $cpu_count > 1 && [info exists RUN_SMP_APP] } {
		target create $_CHIPNAME.cpu0 riscv -endian $_ENDIAN -chain-position $_CHIPNAME.bridge -coreid 0 -dbgbase [expr 0*0x1000+0x10B80000] -work-area-phys 0xF9000000 -work-area-size 1024 -rtos hwthread
		for {set i 1} {$i < $cpu_count} {incr i} {			
        		target create $_CHIPNAME.cpu$i riscv -endian $_ENDIAN -chain-position $_CHIPNAME.bridge -coreid $i -dbgbase [expr $i*0x1000+0x10B80000] -work-area-phys 0xF9000000 -work-area-size 1024
    		}
		riscv use_bscan_tunnel 6 1
        riscv set_bscan_tunnel_ir 8 
		target smp $_CHIPNAME.cpu0 $_CHIPNAME.cpu1 $_CHIPNAME.cpu2 $_CHIPNAME.cpu3

	} else {
		for {set i 0} {$i < $cpu_count} {incr i} {
		    target create $_CHIPNAME.cpu$i riscv -endian $_ENDIAN -chain-position $_CHIPNAME.bridge -coreid $i -dbgbase [expr $i*0x1000+0x10B80000] -work-area-phys 0xF9000000 -work-area-size 1024
		    riscv use_bscan_tunnel 6 1
		    riscv set_bscan_tunnel_ir 8
        }
	} 
	riscv resume_order reversed
        
    }
    #insert target tap(s) info#
    #start#
    
    #end#
    
    for {set i 0} {$i < $cpu_count} {incr i} {
        targets $_CHIPNAME.cpu$i
        poll_period 50
        init
        #soft_reset_halt
        halt
    }
    
    if { [info exists RUN_SMP_APP] && $STANDARD_DEBUG == 0 } {
        targets $_CHIPNAME.cpu0
        
        load_image $proj_loc/software/standalone/smpDemo/build/smpDemo.bin $instr_addr
        
        set i $cpu_count
        incr i -1
        for {} {$i >= 0} {incr i -1} {
            targets $_CHIPNAME.cpu$i
            reg x10 0
            reg x11 0
            resume $instr_addr
        }
        puts "Start running smpDemo apps"
    }    
    
} else {
    set workspace $::env(workspace_loc)
    
    adapter_khz 800
    adapter_nsrst_delay 260
    jtag_ntrst_delay 250
    
    set _CHIPNAME fpga_spinal
    jtag newtap $_CHIPNAME bridge  -expected-id $_CPUTAPID -irlen 5 -ircapture 0x5 -irmask 0xF
    
    if { $STANDARD_DEBUG == 0 } {
        for {set i 0} {$i < $cpu_count} {incr i} {
            target create $_CHIPNAME.cpu$i vexriscv -endian $_ENDIAN -chain-position $_CHIPNAME.bridge -coreid $i -dbgbase [expr $i*0x1000+0x10B80000] -work-area-phys 0xF9000000 -work-area-size 1024
            vexriscv readWaitCycles 40
            vexriscv cpuConfigFile $workspace/cpu$i.yaml
            vexriscv jtagMapping 8 8 0 1 2 2  
        }
    } else {
        for {set i 0} {$i < $cpu_count} {incr i} {
            target create $_CHIPNAME.cpu$i riscv -endian $_ENDIAN -chain-position $_CHIPNAME.bridge -coreid $i -dbgbase [expr $i*0x1000+0x10B80000] -work-area-phys 0xF9000000 -work-area-size 1024
            riscv use_bscan_tunnel 6 1
            riscv set_bscan_tunnel_ir 8
        }
    }

    for {set i 0} {$i < $cpu_count} {incr i} {
        targets $_CHIPNAME.cpu$i
        poll_period 50
        init
        #soft_reset_halt
        halt
    }
    
    if { [info exists RUN_SMP_APP] } {
        targets $_CHIPNAME.cpu0
        
        load_image $workspace/software/standalone/smpDemo/build/smpDemo.bin $instr_addr
        
        set i $cpu_count
        incr i -1
        for {} {$i >= 0} {incr i -1} {
            targets $_CHIPNAME.cpu$i
            reg x10 0
            reg x11 0
            resume $instr_addr
        }
        puts "Start running smpDemo apps"
    
    }
}
